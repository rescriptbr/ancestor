{"version":3,"file":"main.e9d46f25c96c205ba14a.hot-update.js","sources":["webpack:///./src/components/stack/Ancestor_Stack.bs.js"],"sourcesContent":["// Generated by ReScript, PLEASE EDIT WITH CARE\n'use strict';\n\nvar Curry = require(\"rescript/lib/js/curry.js\");\nvar React = require(\"react\");\nvar Caml_option = require(\"rescript/lib/js/caml_option.js\");\nvar Ancestor_Base = require(\"../base/Ancestor_Base.bs.js\");\nvar Ancestor_Styles = require(\"../../core/Ancestor_Styles.bs.js\");\n\nfunction Make(Maker) {\n  var Styles = Ancestor_Styles.Make(Maker);\n  var Base = Ancestor_Base.Make(Maker);\n  var createStack = function (direction, spacing, param) {\n    var responsiveStyles = [\n      Curry._3(Styles.createResponsiveProp, spacing, undefined, (function (spacing) {\n              return \"gap: \" + Curry._1(Styles.Spacing.make, spacing) + \";\";\n            })),\n      Curry._3(Styles.createResponsiveProp, direction, \"flex-direction: row;\", (function (direction) {\n              if (direction === \"horizontal\") {\n                return \"flex-direction: column\";\n              } else {\n                return \"flex-direction: row;\";\n              }\n            }))\n    ];\n    return Curry._1(Maker.css, \"\\n      \" + \"\\n      display: flex;\\n    \" + \"\\n      \" + Curry._1(Styles.merge, responsiveStyles) + \"\\n      \");\n  };\n  var renderWithDivider = function (children, divider) {\n    var total = React.Children.count(children);\n    return React.Children.map(children, (function (element, index) {\n                  if (index === (total - 1 | 0)) {\n                    return children;\n                  } else {\n                    return React.createElement(React.Fragment, undefined, element, divider);\n                  }\n                }));\n  };\n  var Ancestor_Stack$Make = function (Props) {\n    var direction = Props.direction;\n    var spacing = Props.spacing;\n    var divider = Props.divider;\n    var borderRadius = Props.borderRadius;\n    var borderTLRadius = Props.borderTLRadius;\n    var borderTRRadius = Props.borderTRRadius;\n    var borderBLRadius = Props.borderBLRadius;\n    var borderBRRadius = Props.borderBRRadius;\n    var borderStyle = Props.borderStyle;\n    var borderColor = Props.borderColor;\n    var borderWidth = Props.borderWidth;\n    var borderRightStyle = Props.borderRightStyle;\n    var borderLeftStyle = Props.borderLeftStyle;\n    var borderTopStyle = Props.borderTopStyle;\n    var borderBottomStyle = Props.borderBottomStyle;\n    var borderRightColor = Props.borderRightColor;\n    var borderLeftColor = Props.borderLeftColor;\n    var borderTopColor = Props.borderTopColor;\n    var borderBottomColor = Props.borderBottomColor;\n    var borderRightWidth = Props.borderRightWidth;\n    var borderLeftWidth = Props.borderLeftWidth;\n    var borderTopWidth = Props.borderTopWidth;\n    var borderBottomWidth = Props.borderBottomWidth;\n    var border = Props.border;\n    var borderRight = Props.borderRight;\n    var borderLeft = Props.borderLeft;\n    var borderTop = Props.borderTop;\n    var borderBottom = Props.borderBottom;\n    var bgColor = Props.bgColor;\n    var bgSize = Props.bgSize;\n    var bgPosition = Props.bgPosition;\n    var bgImage = Props.bgImage;\n    var color = Props.color;\n    var display = Props.display;\n    var justifyContent = Props.justifyContent;\n    var flexDirection = Props.flexDirection;\n    var alignItems = Props.alignItems;\n    var flexBasis = Props.flexBasis;\n    var flexWrap = Props.flexWrap;\n    var flexGrow = Props.flexGrow;\n    var alignContent = Props.alignContent;\n    var alignSelf = Props.alignSelf;\n    var justifySelf = Props.justifySelf;\n    var flexFlow = Props.flexFlow;\n    var gap = Props.gap;\n    var p = Props.p;\n    var px = Props.px;\n    var py = Props.py;\n    var pt = Props.pt;\n    var pb = Props.pb;\n    var pl = Props.pl;\n    var pr = Props.pr;\n    var m = Props.m;\n    var mx = Props.mx;\n    var my = Props.my;\n    var mt = Props.mt;\n    var mb = Props.mb;\n    var ml = Props.ml;\n    var mr = Props.mr;\n    var textAlign = Props.textAlign;\n    var fontWeight = Props.fontWeight;\n    var fontSize = Props.fontSize;\n    var letterSpacing = Props.letterSpacing;\n    var lineHeight = Props.lineHeight;\n    var width = Props.width;\n    var height = Props.height;\n    var minW = Props.minW;\n    var minH = Props.minH;\n    var maxW = Props.maxW;\n    var maxH = Props.maxH;\n    var position = Props.position;\n    var top = Props.top;\n    var bottom = Props.bottom;\n    var left = Props.left;\n    var right = Props.right;\n    var zIndex = Props.zIndex;\n    var boxSizing = Props.boxSizing;\n    var overflow = Props.overflow;\n    var overflowX = Props.overflowX;\n    var overflowY = Props.overflowY;\n    var cursor = Props.cursor;\n    var visibility = Props.visibility;\n    var listStyleType = Props.listStyleType;\n    var listStylePosition = Props.listStylePosition;\n    var listStyleImage = Props.listStyleImage;\n    var listStyle = Props.listStyle;\n    var outlineStyle = Props.outlineStyle;\n    var outline = Props.outline;\n    var textDecorationStyle = Props.textDecorationStyle;\n    var textDecorationLine = Props.textDecorationLine;\n    var textDecoration = Props.textDecoration;\n    var transform = Props.transform;\n    var children = Props.children;\n    var dangerouslySetInnerHTML = Props.dangerouslySetInnerHTML;\n    var innerRef = Props.innerRef;\n    var classNameOpt = Props.className;\n    var tagOpt = Props.tag;\n    var id = Props.id;\n    var onClick = Props.onClick;\n    var onSubmit = Props.onSubmit;\n    var onChange = Props.onChange;\n    var src = Props.src;\n    var alt = Props.alt;\n    var ariaDetails = Props.ariaDetails;\n    var ariaDisabled = Props.ariaDisabled;\n    var ariaHidden = Props.ariaHidden;\n    var ariaKeyshortcuts = Props.ariaKeyshortcuts;\n    var ariaLabel = Props.ariaLabel;\n    var ariaRoledescription = Props.ariaRoledescription;\n    var ariaExpanded = Props.ariaExpanded;\n    var ariaLevel = Props.ariaLevel;\n    var ariaModal = Props.ariaModal;\n    var ariaMultiline = Props.ariaMultiline;\n    var ariaMultiselectable = Props.ariaMultiselectable;\n    var ariaPlaceholder = Props.ariaPlaceholder;\n    var ariaReadonly = Props.ariaReadonly;\n    var ariaRequired = Props.ariaRequired;\n    var ariaSelected = Props.ariaSelected;\n    var ariaSort = Props.ariaSort;\n    var ariaValuemax = Props.ariaValuemax;\n    var ariaValuemin = Props.ariaValuemin;\n    var ariaValuenow = Props.ariaValuenow;\n    var ariaValuetext = Props.ariaValuetext;\n    var ariaAtomic = Props.ariaAtomic;\n    var ariaBusy = Props.ariaBusy;\n    var ariaRelevant = Props.ariaRelevant;\n    var ariaGrabbed = Props.ariaGrabbed;\n    var ariaActivedescendant = Props.ariaActivedescendant;\n    var ariaColcount = Props.ariaColcount;\n    var ariaColindex = Props.ariaColindex;\n    var ariaColspan = Props.ariaColspan;\n    var ariaControls = Props.ariaControls;\n    var ariaDescribedby = Props.ariaDescribedby;\n    var ariaErrormessage = Props.ariaErrormessage;\n    var ariaFlowto = Props.ariaFlowto;\n    var ariaLabelledby = Props.ariaLabelledby;\n    var ariaOwns = Props.ariaOwns;\n    var ariaPosinset = Props.ariaPosinset;\n    var ariaRowcount = Props.ariaRowcount;\n    var ariaRowindex = Props.ariaRowindex;\n    var ariaRowspan = Props.ariaRowspan;\n    var ariaSetsize = Props.ariaSetsize;\n    var defaultChecked = Props.defaultChecked;\n    var defaultValue = Props.defaultValue;\n    var accessKey = Props.accessKey;\n    var contentEditable = Props.contentEditable;\n    var contextMenu = Props.contextMenu;\n    var lang = Props.lang;\n    var role = Props.role;\n    var style = Props.style;\n    var spellCheck = Props.spellCheck;\n    var tabIndex = Props.tabIndex;\n    var title = Props.title;\n    var itemID = Props.itemID;\n    var itemProp = Props.itemProp;\n    var itemRef = Props.itemRef;\n    var itemScope = Props.itemScope;\n    var itemType = Props.itemType;\n    var accept = Props.accept;\n    var acceptCharset = Props.acceptCharset;\n    var action = Props.action;\n    var allowFullScreen = Props.allowFullScreen;\n    var async = Props.async;\n    var autoComplete = Props.autoComplete;\n    var autoCapitalize = Props.autoCapitalize;\n    var autoFocus = Props.autoFocus;\n    var autoPlay = Props.autoPlay;\n    var challenge = Props.challenge;\n    var charSet = Props.charSet;\n    var checked = Props.checked;\n    var cite = Props.cite;\n    var crossOrigin = Props.crossOrigin;\n    var cols = Props.cols;\n    var colSpan = Props.colSpan;\n    var content = Props.content;\n    var controls = Props.controls;\n    var coords = Props.coords;\n    var data = Props.data;\n    var dateTime = Props.dateTime;\n    var $$default = Props.default;\n    var defer = Props.defer;\n    var disabled = Props.disabled;\n    var download = Props.download;\n    var encType = Props.encType;\n    var form = Props.form;\n    var formAction = Props.formAction;\n    var formTarget = Props.formTarget;\n    var formMethod = Props.formMethod;\n    var headers = Props.headers;\n    var high = Props.high;\n    var href = Props.href;\n    var hrefLang = Props.hrefLang;\n    var htmlFor = Props.htmlFor;\n    var httpEquiv = Props.httpEquiv;\n    var icon = Props.icon;\n    var inputMode = Props.inputMode;\n    var integrity = Props.integrity;\n    var keyType = Props.keyType;\n    var kind = Props.kind;\n    var label = Props.label;\n    var list = Props.list;\n    var loop = Props.loop;\n    var low = Props.low;\n    var manifest = Props.manifest;\n    var max = Props.max;\n    var maxLength = Props.maxLength;\n    var media = Props.media;\n    var mediaGroup = Props.mediaGroup;\n    var method = Props.method;\n    var min = Props.min;\n    var minLength = Props.minLength;\n    var multiple = Props.multiple;\n    var muted = Props.muted;\n    var name = Props.name;\n    var nonce = Props.nonce;\n    var noValidate = Props.noValidate;\n    var open_ = Props.open_;\n    var optimum = Props.optimum;\n    var pattern = Props.pattern;\n    var placeholder = Props.placeholder;\n    var playsInline = Props.playsInline;\n    var poster = Props.poster;\n    var preload = Props.preload;\n    var radioGroup = Props.radioGroup;\n    var readOnly = Props.readOnly;\n    var rel = Props.rel;\n    var required = Props.required;\n    var reversed = Props.reversed;\n    var rows = Props.rows;\n    var rowSpan = Props.rowSpan;\n    var sandbox = Props.sandbox;\n    var scope = Props.scope;\n    var scoped = Props.scoped;\n    var scrolling = Props.scrolling;\n    var selected = Props.selected;\n    var shape = Props.shape;\n    var size = Props.size;\n    var sizes = Props.sizes;\n    var span = Props.span;\n    var srcDoc = Props.srcDoc;\n    var srcLang = Props.srcLang;\n    var srcSet = Props.srcSet;\n    var start = Props.start;\n    var step = Props.step;\n    var summary = Props.summary;\n    var target = Props.target;\n    var type_ = Props.type_;\n    var useMap = Props.useMap;\n    var value = Props.value;\n    var wrap = Props.wrap;\n    var onCopy = Props.onCopy;\n    var onCut = Props.onCut;\n    var onPaste = Props.onPaste;\n    var onCompositionEnd = Props.onCompositionEnd;\n    var onCompositionStart = Props.onCompositionStart;\n    var onCompositionUpdate = Props.onCompositionUpdate;\n    var onKeyDown = Props.onKeyDown;\n    var onKeyPress = Props.onKeyPress;\n    var onKeyUp = Props.onKeyUp;\n    var onFocus = Props.onFocus;\n    var onBlur = Props.onBlur;\n    var onInput = Props.onInput;\n    var onInvalid = Props.onInvalid;\n    var onContextMenu = Props.onContextMenu;\n    var onDoubleClick = Props.onDoubleClick;\n    var onDrag = Props.onDrag;\n    var onDragEnd = Props.onDragEnd;\n    var onDragEnter = Props.onDragEnter;\n    var onDragExit = Props.onDragExit;\n    var onDragLeave = Props.onDragLeave;\n    var onDragOver = Props.onDragOver;\n    var onDragStart = Props.onDragStart;\n    var onDrop = Props.onDrop;\n    var onMouseDown = Props.onMouseDown;\n    var onMouseEnter = Props.onMouseEnter;\n    var onMouseLeave = Props.onMouseLeave;\n    var onMouseMove = Props.onMouseMove;\n    var onMouseOut = Props.onMouseOut;\n    var onMouseOver = Props.onMouseOver;\n    var onMouseUp = Props.onMouseUp;\n    var onSelect = Props.onSelect;\n    var onTouchCancel = Props.onTouchCancel;\n    var onTouchEnd = Props.onTouchEnd;\n    var onTouchMove = Props.onTouchMove;\n    var onTouchStart = Props.onTouchStart;\n    var onPointerOver = Props.onPointerOver;\n    var onPointerEnter = Props.onPointerEnter;\n    var onPointerDown = Props.onPointerDown;\n    var onPointerMove = Props.onPointerMove;\n    var onPointerUp = Props.onPointerUp;\n    var onPointerCancel = Props.onPointerCancel;\n    var onPointerOut = Props.onPointerOut;\n    var onPointerLeave = Props.onPointerLeave;\n    var onGotPointerCapture = Props.onGotPointerCapture;\n    var onLostPointerCapture = Props.onLostPointerCapture;\n    var onScroll = Props.onScroll;\n    var onWheel = Props.onWheel;\n    var onAbort = Props.onAbort;\n    var onCanPlay = Props.onCanPlay;\n    var onCanPlayThrough = Props.onCanPlayThrough;\n    var onDurationChange = Props.onDurationChange;\n    var onEmptied = Props.onEmptied;\n    var onEncrypetd = Props.onEncrypetd;\n    var onEnded = Props.onEnded;\n    var onError = Props.onError;\n    var onLoadedData = Props.onLoadedData;\n    var onLoadedMetadata = Props.onLoadedMetadata;\n    var onLoadStart = Props.onLoadStart;\n    var onPause = Props.onPause;\n    var onPlay = Props.onPlay;\n    var onPlaying = Props.onPlaying;\n    var onProgress = Props.onProgress;\n    var onRateChange = Props.onRateChange;\n    var onSeeked = Props.onSeeked;\n    var onSeeking = Props.onSeeking;\n    var onStalled = Props.onStalled;\n    var onSuspend = Props.onSuspend;\n    var onTimeUpdate = Props.onTimeUpdate;\n    var onVolumeChange = Props.onVolumeChange;\n    var onWaiting = Props.onWaiting;\n    var onLoad = Props.onLoad;\n    var onAnimationStart = Props.onAnimationStart;\n    var onAnimationEnd = Props.onAnimationEnd;\n    var onAnimationIteration = Props.onAnimationIteration;\n    var onTransitionEnd = Props.onTransitionEnd;\n    var className = classNameOpt !== undefined ? classNameOpt : \"\";\n    var tag = tagOpt !== undefined ? tagOpt : \"div\";\n    var tmp;\n    if (children !== undefined) {\n      var children$1 = Caml_option.valFromOption(children);\n      tmp = divider !== undefined ? renderWithDivider(children$1, Caml_option.valFromOption(divider)) : children$1;\n    } else {\n      tmp = divider !== undefined ? Caml_option.valFromOption(divider) : null;\n    }\n    var tmp$1 = {\n      tag: tag,\n      className: createStack(direction, spacing, undefined) + \" \" + className,\n      children: tmp\n    };\n    if (borderRadius !== undefined) {\n      tmp$1.borderRadius = Caml_option.valFromOption(borderRadius);\n    }\n    if (borderTLRadius !== undefined) {\n      tmp$1.borderTLRadius = Caml_option.valFromOption(borderTLRadius);\n    }\n    if (borderTRRadius !== undefined) {\n      tmp$1.borderTRRadius = Caml_option.valFromOption(borderTRRadius);\n    }\n    if (borderBLRadius !== undefined) {\n      tmp$1.borderBLRadius = Caml_option.valFromOption(borderBLRadius);\n    }\n    if (borderBRRadius !== undefined) {\n      tmp$1.borderBRRadius = Caml_option.valFromOption(borderBRRadius);\n    }\n    if (borderStyle !== undefined) {\n      tmp$1.borderStyle = Caml_option.valFromOption(borderStyle);\n    }\n    if (borderColor !== undefined) {\n      tmp$1.borderColor = Caml_option.valFromOption(borderColor);\n    }\n    if (borderWidth !== undefined) {\n      tmp$1.borderWidth = Caml_option.valFromOption(borderWidth);\n    }\n    if (borderRightStyle !== undefined) {\n      tmp$1.borderRightStyle = Caml_option.valFromOption(borderRightStyle);\n    }\n    if (borderLeftStyle !== undefined) {\n      tmp$1.borderLeftStyle = Caml_option.valFromOption(borderLeftStyle);\n    }\n    if (borderTopStyle !== undefined) {\n      tmp$1.borderTopStyle = Caml_option.valFromOption(borderTopStyle);\n    }\n    if (borderBottomStyle !== undefined) {\n      tmp$1.borderBottomStyle = Caml_option.valFromOption(borderBottomStyle);\n    }\n    if (borderRightColor !== undefined) {\n      tmp$1.borderRightColor = Caml_option.valFromOption(borderRightColor);\n    }\n    if (borderLeftColor !== undefined) {\n      tmp$1.borderLeftColor = Caml_option.valFromOption(borderLeftColor);\n    }\n    if (borderTopColor !== undefined) {\n      tmp$1.borderTopColor = Caml_option.valFromOption(borderTopColor);\n    }\n    if (borderBottomColor !== undefined) {\n      tmp$1.borderBottomColor = Caml_option.valFromOption(borderBottomColor);\n    }\n    if (borderRightWidth !== undefined) {\n      tmp$1.borderRightWidth = Caml_option.valFromOption(borderRightWidth);\n    }\n    if (borderLeftWidth !== undefined) {\n      tmp$1.borderLeftWidth = Caml_option.valFromOption(borderLeftWidth);\n    }\n    if (borderTopWidth !== undefined) {\n      tmp$1.borderTopWidth = Caml_option.valFromOption(borderTopWidth);\n    }\n    if (borderBottomWidth !== undefined) {\n      tmp$1.borderBottomWidth = Caml_option.valFromOption(borderBottomWidth);\n    }\n    if (border !== undefined) {\n      tmp$1.border = Caml_option.valFromOption(border);\n    }\n    if (borderRight !== undefined) {\n      tmp$1.borderRight = Caml_option.valFromOption(borderRight);\n    }\n    if (borderLeft !== undefined) {\n      tmp$1.borderLeft = Caml_option.valFromOption(borderLeft);\n    }\n    if (borderTop !== undefined) {\n      tmp$1.borderTop = Caml_option.valFromOption(borderTop);\n    }\n    if (borderBottom !== undefined) {\n      tmp$1.borderBottom = Caml_option.valFromOption(borderBottom);\n    }\n    if (bgColor !== undefined) {\n      tmp$1.bgColor = Caml_option.valFromOption(bgColor);\n    }\n    if (bgSize !== undefined) {\n      tmp$1.bgSize = Caml_option.valFromOption(bgSize);\n    }\n    if (bgPosition !== undefined) {\n      tmp$1.bgPosition = Caml_option.valFromOption(bgPosition);\n    }\n    if (bgImage !== undefined) {\n      tmp$1.bgImage = Caml_option.valFromOption(bgImage);\n    }\n    if (color !== undefined) {\n      tmp$1.color = Caml_option.valFromOption(color);\n    }\n    if (display !== undefined) {\n      tmp$1.display = Caml_option.valFromOption(display);\n    }\n    if (justifyContent !== undefined) {\n      tmp$1.justifyContent = Caml_option.valFromOption(justifyContent);\n    }\n    if (flexDirection !== undefined) {\n      tmp$1.flexDirection = Caml_option.valFromOption(flexDirection);\n    }\n    if (alignItems !== undefined) {\n      tmp$1.alignItems = Caml_option.valFromOption(alignItems);\n    }\n    if (flexBasis !== undefined) {\n      tmp$1.flexBasis = Caml_option.valFromOption(flexBasis);\n    }\n    if (flexWrap !== undefined) {\n      tmp$1.flexWrap = Caml_option.valFromOption(flexWrap);\n    }\n    if (flexGrow !== undefined) {\n      tmp$1.flexGrow = Caml_option.valFromOption(flexGrow);\n    }\n    if (alignContent !== undefined) {\n      tmp$1.alignContent = Caml_option.valFromOption(alignContent);\n    }\n    if (alignSelf !== undefined) {\n      tmp$1.alignSelf = Caml_option.valFromOption(alignSelf);\n    }\n    if (justifySelf !== undefined) {\n      tmp$1.justifySelf = Caml_option.valFromOption(justifySelf);\n    }\n    if (flexFlow !== undefined) {\n      tmp$1.flexFlow = Caml_option.valFromOption(flexFlow);\n    }\n    if (gap !== undefined) {\n      tmp$1.gap = Caml_option.valFromOption(gap);\n    }\n    if (p !== undefined) {\n      tmp$1.p = Caml_option.valFromOption(p);\n    }\n    if (px !== undefined) {\n      tmp$1.px = Caml_option.valFromOption(px);\n    }\n    if (py !== undefined) {\n      tmp$1.py = Caml_option.valFromOption(py);\n    }\n    if (pt !== undefined) {\n      tmp$1.pt = Caml_option.valFromOption(pt);\n    }\n    if (pb !== undefined) {\n      tmp$1.pb = Caml_option.valFromOption(pb);\n    }\n    if (pl !== undefined) {\n      tmp$1.pl = Caml_option.valFromOption(pl);\n    }\n    if (pr !== undefined) {\n      tmp$1.pr = Caml_option.valFromOption(pr);\n    }\n    if (m !== undefined) {\n      tmp$1.m = Caml_option.valFromOption(m);\n    }\n    if (mx !== undefined) {\n      tmp$1.mx = Caml_option.valFromOption(mx);\n    }\n    if (my !== undefined) {\n      tmp$1.my = Caml_option.valFromOption(my);\n    }\n    if (mt !== undefined) {\n      tmp$1.mt = Caml_option.valFromOption(mt);\n    }\n    if (mb !== undefined) {\n      tmp$1.mb = Caml_option.valFromOption(mb);\n    }\n    if (ml !== undefined) {\n      tmp$1.ml = Caml_option.valFromOption(ml);\n    }\n    if (mr !== undefined) {\n      tmp$1.mr = Caml_option.valFromOption(mr);\n    }\n    if (textAlign !== undefined) {\n      tmp$1.textAlign = Caml_option.valFromOption(textAlign);\n    }\n    if (fontWeight !== undefined) {\n      tmp$1.fontWeight = Caml_option.valFromOption(fontWeight);\n    }\n    if (fontSize !== undefined) {\n      tmp$1.fontSize = Caml_option.valFromOption(fontSize);\n    }\n    if (letterSpacing !== undefined) {\n      tmp$1.letterSpacing = Caml_option.valFromOption(letterSpacing);\n    }\n    if (lineHeight !== undefined) {\n      tmp$1.lineHeight = Caml_option.valFromOption(lineHeight);\n    }\n    if (width !== undefined) {\n      tmp$1.width = Caml_option.valFromOption(width);\n    }\n    if (height !== undefined) {\n      tmp$1.height = Caml_option.valFromOption(height);\n    }\n    if (minW !== undefined) {\n      tmp$1.minW = Caml_option.valFromOption(minW);\n    }\n    if (minH !== undefined) {\n      tmp$1.minH = Caml_option.valFromOption(minH);\n    }\n    if (maxW !== undefined) {\n      tmp$1.maxW = Caml_option.valFromOption(maxW);\n    }\n    if (maxH !== undefined) {\n      tmp$1.maxH = Caml_option.valFromOption(maxH);\n    }\n    if (position !== undefined) {\n      tmp$1.position = Caml_option.valFromOption(position);\n    }\n    if (top !== undefined) {\n      tmp$1.top = Caml_option.valFromOption(top);\n    }\n    if (bottom !== undefined) {\n      tmp$1.bottom = Caml_option.valFromOption(bottom);\n    }\n    if (left !== undefined) {\n      tmp$1.left = Caml_option.valFromOption(left);\n    }\n    if (right !== undefined) {\n      tmp$1.right = Caml_option.valFromOption(right);\n    }\n    if (zIndex !== undefined) {\n      tmp$1.zIndex = Caml_option.valFromOption(zIndex);\n    }\n    if (boxSizing !== undefined) {\n      tmp$1.boxSizing = Caml_option.valFromOption(boxSizing);\n    }\n    if (overflow !== undefined) {\n      tmp$1.overflow = Caml_option.valFromOption(overflow);\n    }\n    if (overflowX !== undefined) {\n      tmp$1.overflowX = Caml_option.valFromOption(overflowX);\n    }\n    if (overflowY !== undefined) {\n      tmp$1.overflowY = Caml_option.valFromOption(overflowY);\n    }\n    if (cursor !== undefined) {\n      tmp$1.cursor = Caml_option.valFromOption(cursor);\n    }\n    if (visibility !== undefined) {\n      tmp$1.visibility = Caml_option.valFromOption(visibility);\n    }\n    if (listStyleType !== undefined) {\n      tmp$1.listStyleType = Caml_option.valFromOption(listStyleType);\n    }\n    if (listStylePosition !== undefined) {\n      tmp$1.listStylePosition = Caml_option.valFromOption(listStylePosition);\n    }\n    if (listStyleImage !== undefined) {\n      tmp$1.listStyleImage = Caml_option.valFromOption(listStyleImage);\n    }\n    if (listStyle !== undefined) {\n      tmp$1.listStyle = Caml_option.valFromOption(listStyle);\n    }\n    if (outlineStyle !== undefined) {\n      tmp$1.outlineStyle = Caml_option.valFromOption(outlineStyle);\n    }\n    if (outline !== undefined) {\n      tmp$1.outline = Caml_option.valFromOption(outline);\n    }\n    if (textDecorationStyle !== undefined) {\n      tmp$1.textDecorationStyle = Caml_option.valFromOption(textDecorationStyle);\n    }\n    if (textDecorationLine !== undefined) {\n      tmp$1.textDecorationLine = Caml_option.valFromOption(textDecorationLine);\n    }\n    if (textDecoration !== undefined) {\n      tmp$1.textDecoration = Caml_option.valFromOption(textDecoration);\n    }\n    if (transform !== undefined) {\n      tmp$1.transform = Caml_option.valFromOption(transform);\n    }\n    if (innerRef !== undefined) {\n      tmp$1.innerRef = Caml_option.valFromOption(innerRef);\n    }\n    if (dangerouslySetInnerHTML !== undefined) {\n      tmp$1.dangerouslySetInnerHTML = Caml_option.valFromOption(dangerouslySetInnerHTML);\n    }\n    if (id !== undefined) {\n      tmp$1.id = Caml_option.valFromOption(id);\n    }\n    if (onClick !== undefined) {\n      tmp$1.onClick = Caml_option.valFromOption(onClick);\n    }\n    if (onSubmit !== undefined) {\n      tmp$1.onSubmit = Caml_option.valFromOption(onSubmit);\n    }\n    if (onChange !== undefined) {\n      tmp$1.onChange = Caml_option.valFromOption(onChange);\n    }\n    if (alt !== undefined) {\n      tmp$1.alt = Caml_option.valFromOption(alt);\n    }\n    if (src !== undefined) {\n      tmp$1.src = Caml_option.valFromOption(src);\n    }\n    if (ariaDetails !== undefined) {\n      tmp$1.ariaDetails = Caml_option.valFromOption(ariaDetails);\n    }\n    if (ariaDisabled !== undefined) {\n      tmp$1.ariaDisabled = Caml_option.valFromOption(ariaDisabled);\n    }\n    if (ariaHidden !== undefined) {\n      tmp$1.ariaHidden = Caml_option.valFromOption(ariaHidden);\n    }\n    if (ariaKeyshortcuts !== undefined) {\n      tmp$1.ariaKeyshortcuts = Caml_option.valFromOption(ariaKeyshortcuts);\n    }\n    if (ariaLabel !== undefined) {\n      tmp$1.ariaLabel = Caml_option.valFromOption(ariaLabel);\n    }\n    if (ariaRoledescription !== undefined) {\n      tmp$1.ariaRoledescription = Caml_option.valFromOption(ariaRoledescription);\n    }\n    if (ariaExpanded !== undefined) {\n      tmp$1.ariaExpanded = Caml_option.valFromOption(ariaExpanded);\n    }\n    if (ariaLevel !== undefined) {\n      tmp$1.ariaLevel = Caml_option.valFromOption(ariaLevel);\n    }\n    if (ariaModal !== undefined) {\n      tmp$1.ariaModal = Caml_option.valFromOption(ariaModal);\n    }\n    if (ariaMultiline !== undefined) {\n      tmp$1.ariaMultiline = Caml_option.valFromOption(ariaMultiline);\n    }\n    if (ariaMultiselectable !== undefined) {\n      tmp$1.ariaMultiselectable = Caml_option.valFromOption(ariaMultiselectable);\n    }\n    if (ariaPlaceholder !== undefined) {\n      tmp$1.ariaPlaceholder = Caml_option.valFromOption(ariaPlaceholder);\n    }\n    if (ariaReadonly !== undefined) {\n      tmp$1.ariaReadonly = Caml_option.valFromOption(ariaReadonly);\n    }\n    if (ariaRequired !== undefined) {\n      tmp$1.ariaRequired = Caml_option.valFromOption(ariaRequired);\n    }\n    if (ariaSelected !== undefined) {\n      tmp$1.ariaSelected = Caml_option.valFromOption(ariaSelected);\n    }\n    if (ariaSort !== undefined) {\n      tmp$1.ariaSort = Caml_option.valFromOption(ariaSort);\n    }\n    if (ariaValuemax !== undefined) {\n      tmp$1.ariaValuemax = Caml_option.valFromOption(ariaValuemax);\n    }\n    if (ariaValuemin !== undefined) {\n      tmp$1.ariaValuemin = Caml_option.valFromOption(ariaValuemin);\n    }\n    if (ariaValuenow !== undefined) {\n      tmp$1.ariaValuenow = Caml_option.valFromOption(ariaValuenow);\n    }\n    if (ariaValuetext !== undefined) {\n      tmp$1.ariaValuetext = Caml_option.valFromOption(ariaValuetext);\n    }\n    if (ariaAtomic !== undefined) {\n      tmp$1.ariaAtomic = Caml_option.valFromOption(ariaAtomic);\n    }\n    if (ariaBusy !== undefined) {\n      tmp$1.ariaBusy = Caml_option.valFromOption(ariaBusy);\n    }\n    if (ariaRelevant !== undefined) {\n      tmp$1.ariaRelevant = Caml_option.valFromOption(ariaRelevant);\n    }\n    if (ariaGrabbed !== undefined) {\n      tmp$1.ariaGrabbed = Caml_option.valFromOption(ariaGrabbed);\n    }\n    if (ariaActivedescendant !== undefined) {\n      tmp$1.ariaActivedescendant = Caml_option.valFromOption(ariaActivedescendant);\n    }\n    if (ariaColcount !== undefined) {\n      tmp$1.ariaColcount = Caml_option.valFromOption(ariaColcount);\n    }\n    if (ariaColindex !== undefined) {\n      tmp$1.ariaColindex = Caml_option.valFromOption(ariaColindex);\n    }\n    if (ariaColspan !== undefined) {\n      tmp$1.ariaColspan = Caml_option.valFromOption(ariaColspan);\n    }\n    if (ariaControls !== undefined) {\n      tmp$1.ariaControls = Caml_option.valFromOption(ariaControls);\n    }\n    if (ariaDescribedby !== undefined) {\n      tmp$1.ariaDescribedby = Caml_option.valFromOption(ariaDescribedby);\n    }\n    if (ariaErrormessage !== undefined) {\n      tmp$1.ariaErrormessage = Caml_option.valFromOption(ariaErrormessage);\n    }\n    if (ariaFlowto !== undefined) {\n      tmp$1.ariaFlowto = Caml_option.valFromOption(ariaFlowto);\n    }\n    if (ariaLabelledby !== undefined) {\n      tmp$1.ariaLabelledby = Caml_option.valFromOption(ariaLabelledby);\n    }\n    if (ariaOwns !== undefined) {\n      tmp$1.ariaOwns = Caml_option.valFromOption(ariaOwns);\n    }\n    if (ariaPosinset !== undefined) {\n      tmp$1.ariaPosinset = Caml_option.valFromOption(ariaPosinset);\n    }\n    if (ariaRowcount !== undefined) {\n      tmp$1.ariaRowcount = Caml_option.valFromOption(ariaRowcount);\n    }\n    if (ariaRowindex !== undefined) {\n      tmp$1.ariaRowindex = Caml_option.valFromOption(ariaRowindex);\n    }\n    if (ariaRowspan !== undefined) {\n      tmp$1.ariaRowspan = Caml_option.valFromOption(ariaRowspan);\n    }\n    if (ariaSetsize !== undefined) {\n      tmp$1.ariaSetsize = Caml_option.valFromOption(ariaSetsize);\n    }\n    if (defaultChecked !== undefined) {\n      tmp$1.defaultChecked = Caml_option.valFromOption(defaultChecked);\n    }\n    if (defaultValue !== undefined) {\n      tmp$1.defaultValue = Caml_option.valFromOption(defaultValue);\n    }\n    if (accessKey !== undefined) {\n      tmp$1.accessKey = Caml_option.valFromOption(accessKey);\n    }\n    if (contentEditable !== undefined) {\n      tmp$1.contentEditable = Caml_option.valFromOption(contentEditable);\n    }\n    if (contextMenu !== undefined) {\n      tmp$1.contextMenu = Caml_option.valFromOption(contextMenu);\n    }\n    if (lang !== undefined) {\n      tmp$1.lang = Caml_option.valFromOption(lang);\n    }\n    if (role !== undefined) {\n      tmp$1.role = Caml_option.valFromOption(role);\n    }\n    if (style !== undefined) {\n      tmp$1.style = Caml_option.valFromOption(style);\n    }\n    if (spellCheck !== undefined) {\n      tmp$1.spellCheck = Caml_option.valFromOption(spellCheck);\n    }\n    if (tabIndex !== undefined) {\n      tmp$1.tabIndex = Caml_option.valFromOption(tabIndex);\n    }\n    if (title !== undefined) {\n      tmp$1.title = Caml_option.valFromOption(title);\n    }\n    if (itemID !== undefined) {\n      tmp$1.itemID = Caml_option.valFromOption(itemID);\n    }\n    if (itemProp !== undefined) {\n      tmp$1.itemProp = Caml_option.valFromOption(itemProp);\n    }\n    if (itemRef !== undefined) {\n      tmp$1.itemRef = Caml_option.valFromOption(itemRef);\n    }\n    if (itemScope !== undefined) {\n      tmp$1.itemScope = Caml_option.valFromOption(itemScope);\n    }\n    if (itemType !== undefined) {\n      tmp$1.itemType = Caml_option.valFromOption(itemType);\n    }\n    if (accept !== undefined) {\n      tmp$1.accept = Caml_option.valFromOption(accept);\n    }\n    if (acceptCharset !== undefined) {\n      tmp$1.acceptCharset = Caml_option.valFromOption(acceptCharset);\n    }\n    if (action !== undefined) {\n      tmp$1.action = Caml_option.valFromOption(action);\n    }\n    if (allowFullScreen !== undefined) {\n      tmp$1.allowFullScreen = Caml_option.valFromOption(allowFullScreen);\n    }\n    if (async !== undefined) {\n      tmp$1.async = Caml_option.valFromOption(async);\n    }\n    if (autoComplete !== undefined) {\n      tmp$1.autoComplete = Caml_option.valFromOption(autoComplete);\n    }\n    if (autoCapitalize !== undefined) {\n      tmp$1.autoCapitalize = Caml_option.valFromOption(autoCapitalize);\n    }\n    if (autoFocus !== undefined) {\n      tmp$1.autoFocus = Caml_option.valFromOption(autoFocus);\n    }\n    if (autoPlay !== undefined) {\n      tmp$1.autoPlay = Caml_option.valFromOption(autoPlay);\n    }\n    if (challenge !== undefined) {\n      tmp$1.challenge = Caml_option.valFromOption(challenge);\n    }\n    if (charSet !== undefined) {\n      tmp$1.charSet = Caml_option.valFromOption(charSet);\n    }\n    if (checked !== undefined) {\n      tmp$1.checked = Caml_option.valFromOption(checked);\n    }\n    if (cite !== undefined) {\n      tmp$1.cite = Caml_option.valFromOption(cite);\n    }\n    if (crossOrigin !== undefined) {\n      tmp$1.crossOrigin = Caml_option.valFromOption(crossOrigin);\n    }\n    if (cols !== undefined) {\n      tmp$1.cols = Caml_option.valFromOption(cols);\n    }\n    if (colSpan !== undefined) {\n      tmp$1.colSpan = Caml_option.valFromOption(colSpan);\n    }\n    if (content !== undefined) {\n      tmp$1.content = Caml_option.valFromOption(content);\n    }\n    if (controls !== undefined) {\n      tmp$1.controls = Caml_option.valFromOption(controls);\n    }\n    if (coords !== undefined) {\n      tmp$1.coords = Caml_option.valFromOption(coords);\n    }\n    if (data !== undefined) {\n      tmp$1.data = Caml_option.valFromOption(data);\n    }\n    if (dateTime !== undefined) {\n      tmp$1.dateTime = Caml_option.valFromOption(dateTime);\n    }\n    if ($$default !== undefined) {\n      tmp$1.default = Caml_option.valFromOption($$default);\n    }\n    if (defer !== undefined) {\n      tmp$1.defer = Caml_option.valFromOption(defer);\n    }\n    if (disabled !== undefined) {\n      tmp$1.disabled = Caml_option.valFromOption(disabled);\n    }\n    if (download !== undefined) {\n      tmp$1.download = Caml_option.valFromOption(download);\n    }\n    if (encType !== undefined) {\n      tmp$1.encType = Caml_option.valFromOption(encType);\n    }\n    if (form !== undefined) {\n      tmp$1.form = Caml_option.valFromOption(form);\n    }\n    if (formAction !== undefined) {\n      tmp$1.formAction = Caml_option.valFromOption(formAction);\n    }\n    if (formTarget !== undefined) {\n      tmp$1.formTarget = Caml_option.valFromOption(formTarget);\n    }\n    if (formMethod !== undefined) {\n      tmp$1.formMethod = Caml_option.valFromOption(formMethod);\n    }\n    if (headers !== undefined) {\n      tmp$1.headers = Caml_option.valFromOption(headers);\n    }\n    if (high !== undefined) {\n      tmp$1.high = Caml_option.valFromOption(high);\n    }\n    if (href !== undefined) {\n      tmp$1.href = Caml_option.valFromOption(href);\n    }\n    if (hrefLang !== undefined) {\n      tmp$1.hrefLang = Caml_option.valFromOption(hrefLang);\n    }\n    if (htmlFor !== undefined) {\n      tmp$1.htmlFor = Caml_option.valFromOption(htmlFor);\n    }\n    if (httpEquiv !== undefined) {\n      tmp$1.httpEquiv = Caml_option.valFromOption(httpEquiv);\n    }\n    if (icon !== undefined) {\n      tmp$1.icon = Caml_option.valFromOption(icon);\n    }\n    if (inputMode !== undefined) {\n      tmp$1.inputMode = Caml_option.valFromOption(inputMode);\n    }\n    if (integrity !== undefined) {\n      tmp$1.integrity = Caml_option.valFromOption(integrity);\n    }\n    if (keyType !== undefined) {\n      tmp$1.keyType = Caml_option.valFromOption(keyType);\n    }\n    if (kind !== undefined) {\n      tmp$1.kind = Caml_option.valFromOption(kind);\n    }\n    if (label !== undefined) {\n      tmp$1.label = Caml_option.valFromOption(label);\n    }\n    if (list !== undefined) {\n      tmp$1.list = Caml_option.valFromOption(list);\n    }\n    if (loop !== undefined) {\n      tmp$1.loop = Caml_option.valFromOption(loop);\n    }\n    if (low !== undefined) {\n      tmp$1.low = Caml_option.valFromOption(low);\n    }\n    if (manifest !== undefined) {\n      tmp$1.manifest = Caml_option.valFromOption(manifest);\n    }\n    if (max !== undefined) {\n      tmp$1.max = Caml_option.valFromOption(max);\n    }\n    if (maxLength !== undefined) {\n      tmp$1.maxLength = Caml_option.valFromOption(maxLength);\n    }\n    if (media !== undefined) {\n      tmp$1.media = Caml_option.valFromOption(media);\n    }\n    if (mediaGroup !== undefined) {\n      tmp$1.mediaGroup = Caml_option.valFromOption(mediaGroup);\n    }\n    if (method !== undefined) {\n      tmp$1.method = Caml_option.valFromOption(method);\n    }\n    if (min !== undefined) {\n      tmp$1.min = Caml_option.valFromOption(min);\n    }\n    if (minLength !== undefined) {\n      tmp$1.minLength = Caml_option.valFromOption(minLength);\n    }\n    if (multiple !== undefined) {\n      tmp$1.multiple = Caml_option.valFromOption(multiple);\n    }\n    if (muted !== undefined) {\n      tmp$1.muted = Caml_option.valFromOption(muted);\n    }\n    if (name !== undefined) {\n      tmp$1.name = Caml_option.valFromOption(name);\n    }\n    if (nonce !== undefined) {\n      tmp$1.nonce = Caml_option.valFromOption(nonce);\n    }\n    if (noValidate !== undefined) {\n      tmp$1.noValidate = Caml_option.valFromOption(noValidate);\n    }\n    if (open_ !== undefined) {\n      tmp$1.open_ = Caml_option.valFromOption(open_);\n    }\n    if (optimum !== undefined) {\n      tmp$1.optimum = Caml_option.valFromOption(optimum);\n    }\n    if (pattern !== undefined) {\n      tmp$1.pattern = Caml_option.valFromOption(pattern);\n    }\n    if (placeholder !== undefined) {\n      tmp$1.placeholder = Caml_option.valFromOption(placeholder);\n    }\n    if (playsInline !== undefined) {\n      tmp$1.playsInline = Caml_option.valFromOption(playsInline);\n    }\n    if (poster !== undefined) {\n      tmp$1.poster = Caml_option.valFromOption(poster);\n    }\n    if (preload !== undefined) {\n      tmp$1.preload = Caml_option.valFromOption(preload);\n    }\n    if (radioGroup !== undefined) {\n      tmp$1.radioGroup = Caml_option.valFromOption(radioGroup);\n    }\n    if (readOnly !== undefined) {\n      tmp$1.readOnly = Caml_option.valFromOption(readOnly);\n    }\n    if (rel !== undefined) {\n      tmp$1.rel = Caml_option.valFromOption(rel);\n    }\n    if (required !== undefined) {\n      tmp$1.required = Caml_option.valFromOption(required);\n    }\n    if (reversed !== undefined) {\n      tmp$1.reversed = Caml_option.valFromOption(reversed);\n    }\n    if (rows !== undefined) {\n      tmp$1.rows = Caml_option.valFromOption(rows);\n    }\n    if (rowSpan !== undefined) {\n      tmp$1.rowSpan = Caml_option.valFromOption(rowSpan);\n    }\n    if (sandbox !== undefined) {\n      tmp$1.sandbox = Caml_option.valFromOption(sandbox);\n    }\n    if (scope !== undefined) {\n      tmp$1.scope = Caml_option.valFromOption(scope);\n    }\n    if (scoped !== undefined) {\n      tmp$1.scoped = Caml_option.valFromOption(scoped);\n    }\n    if (scrolling !== undefined) {\n      tmp$1.scrolling = Caml_option.valFromOption(scrolling);\n    }\n    if (selected !== undefined) {\n      tmp$1.selected = Caml_option.valFromOption(selected);\n    }\n    if (shape !== undefined) {\n      tmp$1.shape = Caml_option.valFromOption(shape);\n    }\n    if (size !== undefined) {\n      tmp$1.size = Caml_option.valFromOption(size);\n    }\n    if (sizes !== undefined) {\n      tmp$1.sizes = Caml_option.valFromOption(sizes);\n    }\n    if (span !== undefined) {\n      tmp$1.span = Caml_option.valFromOption(span);\n    }\n    if (srcDoc !== undefined) {\n      tmp$1.srcDoc = Caml_option.valFromOption(srcDoc);\n    }\n    if (srcLang !== undefined) {\n      tmp$1.srcLang = Caml_option.valFromOption(srcLang);\n    }\n    if (srcSet !== undefined) {\n      tmp$1.srcSet = Caml_option.valFromOption(srcSet);\n    }\n    if (start !== undefined) {\n      tmp$1.start = Caml_option.valFromOption(start);\n    }\n    if (step !== undefined) {\n      tmp$1.step = Caml_option.valFromOption(step);\n    }\n    if (summary !== undefined) {\n      tmp$1.summary = Caml_option.valFromOption(summary);\n    }\n    if (target !== undefined) {\n      tmp$1.target = Caml_option.valFromOption(target);\n    }\n    if (type_ !== undefined) {\n      tmp$1.type_ = Caml_option.valFromOption(type_);\n    }\n    if (useMap !== undefined) {\n      tmp$1.useMap = Caml_option.valFromOption(useMap);\n    }\n    if (value !== undefined) {\n      tmp$1.value = Caml_option.valFromOption(value);\n    }\n    if (wrap !== undefined) {\n      tmp$1.wrap = Caml_option.valFromOption(wrap);\n    }\n    if (onCopy !== undefined) {\n      tmp$1.onCopy = Caml_option.valFromOption(onCopy);\n    }\n    if (onCut !== undefined) {\n      tmp$1.onCut = Caml_option.valFromOption(onCut);\n    }\n    if (onPaste !== undefined) {\n      tmp$1.onPaste = Caml_option.valFromOption(onPaste);\n    }\n    if (onCompositionEnd !== undefined) {\n      tmp$1.onCompositionEnd = Caml_option.valFromOption(onCompositionEnd);\n    }\n    if (onCompositionStart !== undefined) {\n      tmp$1.onCompositionStart = Caml_option.valFromOption(onCompositionStart);\n    }\n    if (onCompositionUpdate !== undefined) {\n      tmp$1.onCompositionUpdate = Caml_option.valFromOption(onCompositionUpdate);\n    }\n    if (onKeyDown !== undefined) {\n      tmp$1.onKeyDown = Caml_option.valFromOption(onKeyDown);\n    }\n    if (onKeyPress !== undefined) {\n      tmp$1.onKeyPress = Caml_option.valFromOption(onKeyPress);\n    }\n    if (onKeyUp !== undefined) {\n      tmp$1.onKeyUp = Caml_option.valFromOption(onKeyUp);\n    }\n    if (onFocus !== undefined) {\n      tmp$1.onFocus = Caml_option.valFromOption(onFocus);\n    }\n    if (onBlur !== undefined) {\n      tmp$1.onBlur = Caml_option.valFromOption(onBlur);\n    }\n    if (onInput !== undefined) {\n      tmp$1.onInput = Caml_option.valFromOption(onInput);\n    }\n    if (onInvalid !== undefined) {\n      tmp$1.onInvalid = Caml_option.valFromOption(onInvalid);\n    }\n    if (onContextMenu !== undefined) {\n      tmp$1.onContextMenu = Caml_option.valFromOption(onContextMenu);\n    }\n    if (onDoubleClick !== undefined) {\n      tmp$1.onDoubleClick = Caml_option.valFromOption(onDoubleClick);\n    }\n    if (onDrag !== undefined) {\n      tmp$1.onDrag = Caml_option.valFromOption(onDrag);\n    }\n    if (onDragEnd !== undefined) {\n      tmp$1.onDragEnd = Caml_option.valFromOption(onDragEnd);\n    }\n    if (onDragEnter !== undefined) {\n      tmp$1.onDragEnter = Caml_option.valFromOption(onDragEnter);\n    }\n    if (onDragExit !== undefined) {\n      tmp$1.onDragExit = Caml_option.valFromOption(onDragExit);\n    }\n    if (onDragLeave !== undefined) {\n      tmp$1.onDragLeave = Caml_option.valFromOption(onDragLeave);\n    }\n    if (onDragOver !== undefined) {\n      tmp$1.onDragOver = Caml_option.valFromOption(onDragOver);\n    }\n    if (onDragStart !== undefined) {\n      tmp$1.onDragStart = Caml_option.valFromOption(onDragStart);\n    }\n    if (onDrop !== undefined) {\n      tmp$1.onDrop = Caml_option.valFromOption(onDrop);\n    }\n    if (onMouseDown !== undefined) {\n      tmp$1.onMouseDown = Caml_option.valFromOption(onMouseDown);\n    }\n    if (onMouseEnter !== undefined) {\n      tmp$1.onMouseEnter = Caml_option.valFromOption(onMouseEnter);\n    }\n    if (onMouseLeave !== undefined) {\n      tmp$1.onMouseLeave = Caml_option.valFromOption(onMouseLeave);\n    }\n    if (onMouseMove !== undefined) {\n      tmp$1.onMouseMove = Caml_option.valFromOption(onMouseMove);\n    }\n    if (onMouseOut !== undefined) {\n      tmp$1.onMouseOut = Caml_option.valFromOption(onMouseOut);\n    }\n    if (onMouseOver !== undefined) {\n      tmp$1.onMouseOver = Caml_option.valFromOption(onMouseOver);\n    }\n    if (onMouseUp !== undefined) {\n      tmp$1.onMouseUp = Caml_option.valFromOption(onMouseUp);\n    }\n    if (onSelect !== undefined) {\n      tmp$1.onSelect = Caml_option.valFromOption(onSelect);\n    }\n    if (onTouchCancel !== undefined) {\n      tmp$1.onTouchCancel = Caml_option.valFromOption(onTouchCancel);\n    }\n    if (onTouchEnd !== undefined) {\n      tmp$1.onTouchEnd = Caml_option.valFromOption(onTouchEnd);\n    }\n    if (onTouchMove !== undefined) {\n      tmp$1.onTouchMove = Caml_option.valFromOption(onTouchMove);\n    }\n    if (onTouchStart !== undefined) {\n      tmp$1.onTouchStart = Caml_option.valFromOption(onTouchStart);\n    }\n    if (onPointerOver !== undefined) {\n      tmp$1.onPointerOver = Caml_option.valFromOption(onPointerOver);\n    }\n    if (onPointerEnter !== undefined) {\n      tmp$1.onPointerEnter = Caml_option.valFromOption(onPointerEnter);\n    }\n    if (onPointerDown !== undefined) {\n      tmp$1.onPointerDown = Caml_option.valFromOption(onPointerDown);\n    }\n    if (onPointerMove !== undefined) {\n      tmp$1.onPointerMove = Caml_option.valFromOption(onPointerMove);\n    }\n    if (onPointerUp !== undefined) {\n      tmp$1.onPointerUp = Caml_option.valFromOption(onPointerUp);\n    }\n    if (onPointerCancel !== undefined) {\n      tmp$1.onPointerCancel = Caml_option.valFromOption(onPointerCancel);\n    }\n    if (onPointerOut !== undefined) {\n      tmp$1.onPointerOut = Caml_option.valFromOption(onPointerOut);\n    }\n    if (onPointerLeave !== undefined) {\n      tmp$1.onPointerLeave = Caml_option.valFromOption(onPointerLeave);\n    }\n    if (onGotPointerCapture !== undefined) {\n      tmp$1.onGotPointerCapture = Caml_option.valFromOption(onGotPointerCapture);\n    }\n    if (onLostPointerCapture !== undefined) {\n      tmp$1.onLostPointerCapture = Caml_option.valFromOption(onLostPointerCapture);\n    }\n    if (onScroll !== undefined) {\n      tmp$1.onScroll = Caml_option.valFromOption(onScroll);\n    }\n    if (onWheel !== undefined) {\n      tmp$1.onWheel = Caml_option.valFromOption(onWheel);\n    }\n    if (onAbort !== undefined) {\n      tmp$1.onAbort = Caml_option.valFromOption(onAbort);\n    }\n    if (onCanPlay !== undefined) {\n      tmp$1.onCanPlay = Caml_option.valFromOption(onCanPlay);\n    }\n    if (onCanPlayThrough !== undefined) {\n      tmp$1.onCanPlayThrough = Caml_option.valFromOption(onCanPlayThrough);\n    }\n    if (onDurationChange !== undefined) {\n      tmp$1.onDurationChange = Caml_option.valFromOption(onDurationChange);\n    }\n    if (onEmptied !== undefined) {\n      tmp$1.onEmptied = Caml_option.valFromOption(onEmptied);\n    }\n    if (onEncrypetd !== undefined) {\n      tmp$1.onEncrypetd = Caml_option.valFromOption(onEncrypetd);\n    }\n    if (onEnded !== undefined) {\n      tmp$1.onEnded = Caml_option.valFromOption(onEnded);\n    }\n    if (onError !== undefined) {\n      tmp$1.onError = Caml_option.valFromOption(onError);\n    }\n    if (onLoadedData !== undefined) {\n      tmp$1.onLoadedData = Caml_option.valFromOption(onLoadedData);\n    }\n    if (onLoadedMetadata !== undefined) {\n      tmp$1.onLoadedMetadata = Caml_option.valFromOption(onLoadedMetadata);\n    }\n    if (onLoadStart !== undefined) {\n      tmp$1.onLoadStart = Caml_option.valFromOption(onLoadStart);\n    }\n    if (onPause !== undefined) {\n      tmp$1.onPause = Caml_option.valFromOption(onPause);\n    }\n    if (onPlay !== undefined) {\n      tmp$1.onPlay = Caml_option.valFromOption(onPlay);\n    }\n    if (onPlaying !== undefined) {\n      tmp$1.onPlaying = Caml_option.valFromOption(onPlaying);\n    }\n    if (onProgress !== undefined) {\n      tmp$1.onProgress = Caml_option.valFromOption(onProgress);\n    }\n    if (onRateChange !== undefined) {\n      tmp$1.onRateChange = Caml_option.valFromOption(onRateChange);\n    }\n    if (onSeeked !== undefined) {\n      tmp$1.onSeeked = Caml_option.valFromOption(onSeeked);\n    }\n    if (onSeeking !== undefined) {\n      tmp$1.onSeeking = Caml_option.valFromOption(onSeeking);\n    }\n    if (onStalled !== undefined) {\n      tmp$1.onStalled = Caml_option.valFromOption(onStalled);\n    }\n    if (onSuspend !== undefined) {\n      tmp$1.onSuspend = Caml_option.valFromOption(onSuspend);\n    }\n    if (onTimeUpdate !== undefined) {\n      tmp$1.onTimeUpdate = Caml_option.valFromOption(onTimeUpdate);\n    }\n    if (onVolumeChange !== undefined) {\n      tmp$1.onVolumeChange = Caml_option.valFromOption(onVolumeChange);\n    }\n    if (onWaiting !== undefined) {\n      tmp$1.onWaiting = Caml_option.valFromOption(onWaiting);\n    }\n    if (onLoad !== undefined) {\n      tmp$1.onLoad = Caml_option.valFromOption(onLoad);\n    }\n    if (onAnimationStart !== undefined) {\n      tmp$1.onAnimationStart = Caml_option.valFromOption(onAnimationStart);\n    }\n    if (onAnimationEnd !== undefined) {\n      tmp$1.onAnimationEnd = Caml_option.valFromOption(onAnimationEnd);\n    }\n    if (onAnimationIteration !== undefined) {\n      tmp$1.onAnimationIteration = Caml_option.valFromOption(onAnimationIteration);\n    }\n    if (onTransitionEnd !== undefined) {\n      tmp$1.onTransitionEnd = Caml_option.valFromOption(onTransitionEnd);\n    }\n    return React.createElement(Base.make, tmp$1);\n  };\n  return {\n          Styles: Styles,\n          Base: Base,\n          createStack: createStack,\n          renderWithDivider: renderWithDivider,\n          make: Ancestor_Stack$Make\n        };\n}\n\nexports.Make = Make;\n/* react Not a pure module */\n"],"mappingssourceRoot":""}